<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $image
 * @property string $active
 * @property Doctrine_Collection $Stores
 * @property Doctrine_Collection $StoreCategory
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method string              getImage()         Returns the current record's "image" value
 * @method string              getActive()        Returns the current record's "active" value
 * @method Doctrine_Collection getStores()        Returns the current record's "Stores" collection
 * @method Doctrine_Collection getStoreCategory() Returns the current record's "StoreCategory" collection
 * @method Category            setId()            Sets the current record's "id" value
 * @method Category            setName()          Sets the current record's "name" value
 * @method Category            setDescription()   Sets the current record's "description" value
 * @method Category            setImage()         Sets the current record's "image" value
 * @method Category            setActive()        Sets the current record's "active" value
 * @method Category            setStores()        Sets the current record's "Stores" collection
 * @method Category            setStoreCategory() Sets the current record's "StoreCategory" collection
 * 
 * @package    qhawpay
 * @subpackage model
 * @author     David Joan Tataje Mendoza <dtataje@qhawpay.pe>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_category');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             'notnull' => false,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('active', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('u_name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => true,
             ));
        $this->option('boolean_columns', array(
             0 => 'active',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Store as Stores', array(
             'refClass' => 'StoreCategory',
             'local' => 'category_id',
             'foreign' => 'store_id'));

        $this->hasMany('StoreCategory', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $sluggableext0 = new Doctrine_Template_SluggableExt(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($sluggableext0);
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}